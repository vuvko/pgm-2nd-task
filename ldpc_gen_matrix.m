% Построение порождающей матрицы для систематического кодирования
%
% Входные параметры:
%   H — проверочная матрица чётности, бинарная матрица размера m x n
%
% Выходные параметры:
%   G — порождающая матрица кода, бинарная матрица размера n x k
%   ind — номера позиций кодового слова, в которые копируются биты 
%         исходного сообщения, т.е. G(ind, :) является единичной матрицей

function [G, ind] = ldpc_gen_matrix(H)
% Получение необходимых размеров
[m, n] = size(H);
k = n - m;
idx = zeros(m, 1); % индексы в итоге такие, что H(:, idx) == eye(m)
ind = [1:n]';
ci = 1; % номер текущей строки
for i = 1:n % цикл идёт по столбцам проверочной матрицы
    [r, ~] = find(H(:, i));
    ri = r(r >= ci);
    if length(ri) < 1
        continue;
    end
    row = H(ri(1), :);
    H(ri(1), :) = H(ci, :);
    % вместо изменения местами нужный строк, обнулим текущую и 
    % сложим row со всеми остальными, в которых на i-й позиции (стобце)
    % стоят единицы, по модулю 2.
    H(ci, :) = zeros(1, n);
    if any(r == ci) == 0 
        r(r == ri(1)) = ci;
    end
    H(r, :) = xor(H(r, :), repmat(row, length(r), 1));
    idx(ci) = i;
    ci = ci + 1;
end
ind(idx) = [];
G = zeros(n, k);
G(idx, :) = H(:, ind);
G(ind, :) = eye(k);
end